name: Run Unit Test via Pytest  
  
on: [push]  
jobs:  
  build:  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        python-version: ["3.10"]  
    env: # Setting environment variables at the job level
      MY_ENV_VAR: ${{ secrets.MY_SECRET }}
      PRIVATE_KEY: ""
      SQL_DATABASE_SERVER: ${{ secrets.SQL_DATABASE_SERVER }}
      SQL_DATABASE_NAME:  ${{ secrets.SQL_DATABASE_NAME }}
      SQL_DATABASE_USERNAME: ${{ secrets.SQL_DATABASE_USERNAME }}
      SQL_DATABASE_PASSWORD: ${{ secrets.SQL_DATABASE_PASSWORD }}
      SQL_DATABASE_SCHEMA: ${{ secrets.SQL_DATABASE_SCHEMA }}

      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GPT_MODEL: ${{ secrets.GPT_MODEL }}

      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
      PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
      PINECONE_INDEX: ${{ secrets.PINECONE_INDEX }}
  
    steps:  
      - uses: actions/checkout@v3  
      - name: Set up Python ${{ matrix.python-version }}  
        uses: actions/setup-python@v4  
        with:  
          python-version: ${{ matrix.python-version }}  
      - name: Install dependencies  
        run: |  
          python -m pip install --upgrade pip  
          if [ -f fastapi/requirements.txt ]; then pip install -r fastapi/requirements.txt; fi  
          pip install streamlit_mic_recorder gnews newspaper3k gtts
      - name: Lint with Ruff  
        run: |  
          pip install ruff  
          ruff --format=github --target-version=py310 .  
        continue-on-error: true  
      - name: Test with pytest  
        run: |  
          coverage run -m pytest  -v -s  
      - name: Generate Coverage Report  
        run: |  
          coverage report -m
